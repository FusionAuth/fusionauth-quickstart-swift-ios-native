name: SwiftLint

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  scan-app:
    name: Swift Lint Check for app
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    runs-on: ubuntu-latest
    steps:
      # Sets up the reviewdog cli
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1.3.0

      - name: Show reviewdog version
        run: reviewdog -version

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      # Performs analysis using Swift Lint and outputs a Sarif Report
      - name: GitHub Action for SwiftLint
        uses: stanfordbdhg/action-swiftlint@v4.0.0
        with:
          args: --reporter sarif --output lint-results-debug.sarif
          # https://github.com/realm/SwiftLint/issues/4048

      # Uploads Sarif Report for the app to GitHub
      - name: Upload Swift app report
        uses: github/codeql-action/upload-sarif@v3.26.0
        if: success() || failure()
        with:
          sarif_file: lint-results-debug.sarif

      # Process checkstyle Report file from Swift Lint with reviewdog cli
      - name: Run reviewdog for app
        if: success() || failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: reviewdog -f=sarif -diff="git diff FETCH_HEAD" -name="lint" -reporter=github-pr-check < lint-results-debug.sarif
